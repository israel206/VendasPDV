/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ControllerCliente;
import controller.ControllerProdutos;
import controller.ControllerProdutosVendasProdutos;
import controller.ControllerVendas;
import controller.ControllerVendasCliente;
import controller.ControllerVendasProdutos;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ModelCliente;
import model.ModelProdutos;
import model.ModelProdutosVendasProdutos;
import model.ModelVendas;
import model.ModelVendasCliente;
import model.ModelVendasProdutos;
import util.BLDatas;

/**
 *
 * @author Mr-Robot
 */
public class ViewVendas extends javax.swing.JFrame {
    //Instancia de Clientes
    ControllerCliente controllerCliente = new ControllerCliente();
    ModelCliente modelCliente = new ModelCliente();
    ArrayList<ModelCliente> listaModelCliente = new ArrayList<>();
    
    //Instancia de produtos
    ArrayList<ModelProdutos> listaModelProdutos = new ArrayList<>();
    ControllerProdutos controllerProdutos = new ControllerProdutos();
    ModelProdutos modelProdutos = new ModelProdutos();
    
    //Instanciar formatador
    //Formatador formatador = new Formatador();
    
    //Instancia de vendas de clientes
    ArrayList<ModelVendasCliente> listaModelVendasCliente = new ArrayList();
    ControllerVendasCliente controllerVendasCliente = new ControllerVendasCliente();
    
    //Instancia de Vendas
    ControllerVendas controllerVendas = new ControllerVendas();
    ModelVendas modelVendas = new ModelVendas();
    
    //Instanciando o Conversor de datas
    BLDatas bLDatas = new BLDatas();
    
    //Instancia vendas produtos
    ControllerVendasProdutos controllerVendasProdutos = new ControllerVendasProdutos();
    ModelVendasProdutos modelVendasProdutos = new ModelVendasProdutos();
    ArrayList<ModelVendasProdutos> listaModelVendasProdutos = new ArrayList<>();
    
    //Instancia produtos vendas produtos
    ControllerProdutosVendasProdutos controllerProdutosVendasProdutos = new ControllerProdutosVendasProdutos();
    ModelProdutosVendasProdutos modelProdutosVendasProdutos = new ModelProdutosVendasProdutos();
    ArrayList<ModelProdutosVendasProdutos> listaModelProdutosVendasProdutos = new ArrayList<>();
    
    //Variável Global
    String ALTERAR_SALVAR;
    
    
    
    /**
     * Creates new form ViewVendas
     */
    public ViewVendas() {
        initComponents();
        this.listarClientes();
        this.listarProdutos();
        
        //centralizando tela no centro
        setLocationRelativeTo(null);
        
        this.carregarVendas();
        
        this.preencherCodigoClientePeloCombox();
        this.preencherCodigoProdutoPeloCombobox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTP_subMenus = new javax.swing.JTabbedPane();
        jPaneCadastro = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTF_codCli = new javax.swing.JTextField();
        uJCB_nomeCli = new componentes.UJComboBox();
        jTF_NumVenda = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        uJCB_nomePro = new componentes.UJComboBox();
        jLabel5 = new javax.swing.JLabel();
        jTF_codProd = new javax.swing.JTextField();
        jTF_quantPro = new javax.swing.JTextField();
        jB_Adicionar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTab_prodVendas = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jFTF_valorTotal = new javax.swing.JFormattedTextField();
        jTF_desconto = new javax.swing.JTextField();
        jB_Novo = new javax.swing.JButton();
        jB_salvar = new javax.swing.JButton();
        jB_cancelar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jB_removerProEst = new javax.swing.JButton();
        jPanelConsultar = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jTF_pesquisa = new javax.swing.JTextField();
        jB_pesquisa = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTab_consultaVendas = new javax.swing.JTable();
        jB_excluir = new javax.swing.JButton();
        jB_alterar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastros e Consultas de vendas");
        setResizable(false);

        jLabel1.setText("Código Cli.:");

        jLabel2.setText("Nome do Cliente:");

        jLabel3.setText("Número da venda:");

        jTF_codCli.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTF_codCliFocusLost(evt);
            }
        });

        uJCB_nomeCli.setAutocompletar(true);
        uJCB_nomeCli.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                uJCB_nomeCliPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jTF_NumVenda.setBackground(new java.awt.Color(204, 255, 204));

        jLabel4.setText("Cod. Prod.");

        uJCB_nomePro.setAutocompletar(true);
        uJCB_nomePro.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                uJCB_nomeProPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel5.setText("Quantidade:");

        jTF_codProd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTF_codProdFocusLost(evt);
            }
        });

        jB_Adicionar.setText("Adicionar");
        jB_Adicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_AdicionarActionPerformed(evt);
            }
        });

        jTab_prodVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cód. Prod.", "Nome Produto", "Quant.", "Valor Unit.", "Valor Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTab_prodVendas);
        if (jTab_prodVendas.getColumnModel().getColumnCount() > 0) {
            jTab_prodVendas.getColumnModel().getColumn(0).setMinWidth(70);
            jTab_prodVendas.getColumnModel().getColumn(0).setPreferredWidth(70);
            jTab_prodVendas.getColumnModel().getColumn(0).setMaxWidth(70);
            jTab_prodVendas.getColumnModel().getColumn(2).setMinWidth(50);
            jTab_prodVendas.getColumnModel().getColumn(2).setPreferredWidth(50);
            jTab_prodVendas.getColumnModel().getColumn(2).setMaxWidth(50);
            jTab_prodVendas.getColumnModel().getColumn(3).setMinWidth(90);
            jTab_prodVendas.getColumnModel().getColumn(3).setPreferredWidth(90);
            jTab_prodVendas.getColumnModel().getColumn(3).setMaxWidth(90);
            jTab_prodVendas.getColumnModel().getColumn(4).setMinWidth(90);
            jTab_prodVendas.getColumnModel().getColumn(4).setPreferredWidth(90);
            jTab_prodVendas.getColumnModel().getColumn(4).setMaxWidth(90);
        }

        jLabel6.setText("Desconto:");

        jLabel7.setText("Valor total:");

        jFTF_valorTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));

        jTF_desconto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTF_descontoFocusLost(evt);
            }
        });

        jB_Novo.setText("Novo");
        jB_Novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_NovoActionPerformed(evt);
            }
        });

        jB_salvar.setText("Salvar");
        jB_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_salvarActionPerformed(evt);
            }
        });

        jB_cancelar.setText("Cancelar");
        jB_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_cancelarActionPerformed(evt);
            }
        });

        jLabel9.setText("Nome Produto:");

        jB_removerProEst.setText("Remover Produtos");
        jB_removerProEst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_removerProEstActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPaneCadastroLayout = new javax.swing.GroupLayout(jPaneCadastro);
        jPaneCadastro.setLayout(jPaneCadastroLayout);
        jPaneCadastroLayout.setHorizontalGroup(
            jPaneCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPaneCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPaneCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPaneCadastroLayout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPaneCadastroLayout.createSequentialGroup()
                        .addGroup(jPaneCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTF_codProd)
                            .addComponent(jTF_codCli)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPaneCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPaneCadastroLayout.createSequentialGroup()
                                .addGroup(jPaneCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(uJCB_nomeCli, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(32, 32, 32)
                                .addGroup(jPaneCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPaneCadastroLayout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(0, 43, Short.MAX_VALUE))
                                    .addComponent(jTF_NumVenda))
                                .addGap(47, 47, 47))
                            .addGroup(jPaneCadastroLayout.createSequentialGroup()
                                .addGroup(jPaneCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(uJCB_nomePro, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addGroup(jPaneCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addGroup(jPaneCadastroLayout.createSequentialGroup()
                                        .addComponent(jTF_quantPro, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addComponent(jB_Adicionar)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPaneCadastroLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jB_Novo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jB_salvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jB_removerProEst)
                        .addGap(18, 18, 18)
                        .addComponent(jB_cancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPaneCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jTF_desconto, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(jPaneCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPaneCadastroLayout.createSequentialGroup()
                                .addComponent(jFTF_valorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPaneCadastroLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(62, 62, 62))))))
        );
        jPaneCadastroLayout.setVerticalGroup(
            jPaneCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPaneCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPaneCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPaneCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTF_codCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(uJCB_nomeCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTF_NumVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPaneCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPaneCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel9)))
                .addGap(18, 18, 18)
                .addGroup(jPaneCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTF_quantPro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPaneCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(uJCB_nomePro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jB_Adicionar)
                        .addComponent(jTF_codProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jPaneCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPaneCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFTF_valorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTF_desconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jB_Novo)
                    .addComponent(jB_salvar)
                    .addComponent(jB_cancelar)
                    .addComponent(jB_removerProEst))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jTP_subMenus.addTab("Cadastro", jPaneCadastro);

        jLabel8.setText("Pesquisa:");

        jB_pesquisa.setText("Pesquisar");
        jB_pesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_pesquisaActionPerformed(evt);
            }
        });

        jTab_consultaVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome Cliente", "Data"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTab_consultaVendas);
        if (jTab_consultaVendas.getColumnModel().getColumnCount() > 0) {
            jTab_consultaVendas.getColumnModel().getColumn(0).setMinWidth(70);
            jTab_consultaVendas.getColumnModel().getColumn(0).setPreferredWidth(70);
            jTab_consultaVendas.getColumnModel().getColumn(0).setMaxWidth(70);
            jTab_consultaVendas.getColumnModel().getColumn(2).setMinWidth(100);
            jTab_consultaVendas.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTab_consultaVendas.getColumnModel().getColumn(2).setMaxWidth(100);
        }

        jB_excluir.setText("Excluir");
        jB_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_excluirActionPerformed(evt);
            }
        });

        jB_alterar.setText("Alterar");
        jB_alterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_alterarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelConsultarLayout = new javax.swing.GroupLayout(jPanelConsultar);
        jPanelConsultar.setLayout(jPanelConsultarLayout);
        jPanelConsultarLayout.setHorizontalGroup(
            jPanelConsultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConsultarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelConsultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelConsultarLayout.createSequentialGroup()
                        .addGroup(jPanelConsultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(jPanelConsultarLayout.createSequentialGroup()
                                .addComponent(jTF_pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jB_pesquisa))
                            .addGroup(jPanelConsultarLayout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jB_alterar)
                                .addGap(37, 37, 37)
                                .addComponent(jB_excluir)))
                        .addGap(0, 108, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanelConsultarLayout.setVerticalGroup(
            jPanelConsultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConsultarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelConsultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTF_pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jB_pesquisa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelConsultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jB_excluir)
                    .addComponent(jB_alterar))
                .addGap(33, 33, 33))
        );

        jTP_subMenus.addTab("Consultar", jPanelConsultar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTP_subMenus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTP_subMenus, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jB_NovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_NovoActionPerformed
        jB_salvar.setEnabled(true);
        ALTERAR_SALVAR = "salvar";
        this.limparFormulario();
    }//GEN-LAST:event_jB_NovoActionPerformed

    private void jB_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_salvarActionPerformed
        
        jB_salvar.setEnabled(false);
        //variaveis
        int codigoVenda = 0, codigoProduto = 0;
        double desconto = 0;
        
        listaModelVendasProdutos = new ArrayList<>();
        
        //tratamento String null de desconto
        if(jTF_desconto.getText().equals("")){
            desconto = 0;
        }else{
            desconto = Double.parseDouble(jTF_desconto.getText());
        }
        //Tratando exceções com if outra altenativa com try catch
        if(!jTF_NumVenda.getText().equals("")){
            //pegando o numero da venda
            modelVendas.setCliente(Integer.parseInt(jTF_NumVenda.getText()));
        }
        
        //pegando o ID do cliente
        modelVendas.setCliente(Integer.parseInt(jTF_codCli.getText()));
        try {
            modelVendas.setVenDataVenda(bLDatas.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));
        } catch (Exception ex) {
        }
        modelVendas.setVenValorLiquido(Double.parseDouble(jFTF_valorTotal.getText()));
        modelVendas.setVenValorBruto(Double.parseDouble(jFTF_valorTotal.getText()) + desconto);
        modelVendas.setVenDesconto(desconto);
        
        //SALVAR VENDA
        if(ALTERAR_SALVAR.equals("salvar")){
            codigoVenda = controllerVendas.salvarVendasController(modelVendas);
            if(codigoVenda > 0 ){
                JOptionPane.showMessageDialog(rootPane, "Venda salvo com sucesso!", "ATENÇÃO!", JOptionPane.WARNING_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(rootPane, "Erro ao salva Venda!", "ERRO:", JOptionPane.ERROR_MESSAGE);
            }
            int cont = jTab_prodVendas.getRowCount();
            for (int i = 0; i < cont; i++) {
                //salvando os produto no estoque vendas dos produtos
                codigoProduto = (int)jTab_prodVendas.getValueAt(i, 0);
                modelVendasProdutos = new ModelVendasProdutos();
                modelProdutos = new ModelProdutos();
                modelVendasProdutos.setProduto(codigoProduto);
                modelVendasProdutos.setVendas(codigoVenda);
                modelVendasProdutos.setVenProValor((double)jTab_prodVendas.getValueAt(i, 3));
                modelVendasProdutos.setVenProQuantidade(Integer.parseInt(jTab_prodVendas.getValueAt(i, 2).toString()));

                //produto, dando baixa no estoque de vendas dos produtos
                modelProdutos.setIdProduto(codigoProduto);
                //retornando estoque atual e dando baixa
                modelProdutos.setProEstoque(controllerProdutos.retornarProdutoController(codigoProduto).getProEstoque() 
                - Integer.parseInt(jTab_prodVendas.getValueAt(i, 2).toString()));

                //Adicinando
                listaModelVendasProdutos.add(modelVendasProdutos); 
                listaModelProdutos.add(modelProdutos);
            }
            
            //Salvar os produtos da venda
            if(controllerVendasProdutos.salvarVendasProdutosController(listaModelVendasProdutos)){
                //alterar o estoque de produtos
                controllerProdutos.alterarEstoqueProdutoController(listaModelProdutos);
//                JOptionPane.showMessageDialog(rootPane, "produtos da venda salvo com sucesso!", "ATENÇÃO!", JOptionPane.WARNING_MESSAGE);
                this.carregarVendas();
                this.limparFormulario();
            }else{
                JOptionPane.showMessageDialog(rootPane, "Erro ao salva produto da venda!", "ERRO:", JOptionPane.ERROR_MESSAGE);
            }
            
        }else{
            
            //INICIO RETORNA PARA O ESTOQUE E EXCLUIR PRODUTOS DA VENDA
            int linha = jTab_consultaVendas.getSelectedRow();
            codigoVenda = (int) jTab_consultaVendas.getValueAt(linha, 0);
            //buscando no banco todos os registros/produtos e adionando na lista
            listaModelProdutos = new ArrayList<>();
            listaModelProdutosVendasProdutos = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);
            //pecorrendo com o for
            for (int i = 0; i < listaModelProdutosVendasProdutos.size(); i++) {
                modelProdutos = new ModelProdutos();
                modelProdutos.setIdProduto(listaModelProdutosVendasProdutos.get(i).getModelProdutos().getIdProduto());

                //add no estoque e somando
                modelProdutos.setProEstoque(
                        listaModelProdutosVendasProdutos.get(i).getModelProdutos().getProEstoque()
                        + 
                        listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenProQuantidade());

                //aad na lista de listaModelProdutos atualizados
                listaModelProdutos.add(modelProdutos);
            }
            //chamando o metodo de alteração
            if(controllerProdutos.alterarEstoqueProdutoController(listaModelProdutos)){
                if(controllerVendasProdutos.excluirVendasProdutosController(codigoVenda)){
//                   JOptionPane.showMessageDialog(rootPane, "Venda excluído com sucesso!", "ATENÇÃO!", JOptionPane.WARNING_MESSAGE);
                   this.carregarVendas();
                }else{
                    JOptionPane.showMessageDialog(rootPane, "Erro ao excluir Venda!", "ERRO:", JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(rootPane, "Erro ao alterar Estoque dos produtos!", "ERRO:", JOptionPane.ERROR_MESSAGE);
            }
            //FIM RETORNA PARA O ESTOQUE E EXCLUIR PRODUTOS DA VENDA
            
            //SALVANDO VENDA
            if(controllerVendas.atualizarVendasController(modelVendas)){
                JOptionPane.showMessageDialog(rootPane, "Venda alterada com sucesso!", "ATENÇÃO!", JOptionPane.WARNING_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(rootPane, "Erro ao alterar venda dos produtos!", "ERRO:", JOptionPane.ERROR_MESSAGE);
            }
            
            //ADICIONAR PRODUTOS NA LISTA PARA SALVAR
            int cont = jTab_prodVendas.getRowCount();
            for (int i = 0; i < cont; i++) {
                //salvando os produto no estoque vendas dos produtos
                codigoProduto = (int)jTab_prodVendas.getValueAt(i, 0);
                modelVendasProdutos = new ModelVendasProdutos();
                modelProdutos = new ModelProdutos();
                modelVendasProdutos.setProduto(codigoProduto);
                modelVendasProdutos.setVendas(codigoVenda);
                modelVendasProdutos.setVenProValor((double)jTab_prodVendas.getValueAt(i, 3));
                modelVendasProdutos.setVenProQuantidade(Integer.parseInt(jTab_prodVendas.getValueAt(i, 2).toString()));

                //produto, dando baixa no estoque de vendas dos produtos
                modelProdutos.setIdProduto(codigoProduto);
                //retornando estoque atual e dando baixa
                modelProdutos.setProEstoque(controllerProdutos.retornarProdutoController(codigoProduto).getProEstoque() 
                - Integer.parseInt(jTab_prodVendas.getValueAt(i, 2).toString()));

                //Adicinando
                listaModelVendasProdutos.add(modelVendasProdutos); 
                listaModelProdutos.add(modelProdutos);
            }
            //SALVANDO OS PRODUTOS DA VENDA
            if(controllerVendasProdutos.salvarVendasProdutosController(listaModelVendasProdutos)){
//                JOptionPane.showMessageDialog(rootPane, "produtos da venda atualizado com sucesso!", "ATENÇÃO!", JOptionPane.WARNING_MESSAGE);
                this.carregarVendas();
                this.limparFormulario();
            }else{
                JOptionPane.showMessageDialog(rootPane, "Erro ao atualizar produto da venda!", "ERRO:", JOptionPane.ERROR_MESSAGE);
            }
        }   
    }//GEN-LAST:event_jB_salvarActionPerformed

    private void jB_AdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_AdicionarActionPerformed
        if(jTF_quantPro.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Você deve preencher todos os campos!", "ATENÇÃO!", JOptionPane.WARNING_MESSAGE);
        }else{
            modelProdutos = controllerProdutos.retornarProdutoController(Integer.parseInt(jTF_codProd.getText()));
            //adiconando uma linha na tabela
            DefaultTableModel modelo = (DefaultTableModel)jTab_prodVendas.getModel();
            //zerando linha 0 e setando os dados
            
            int cont = 0;
            double quantidade = 0;
            quantidade = Double.parseDouble(jTF_quantPro.getText());
            //contador de tamanho da lista
            for (int i = 0; i < cont; i++) {
                modelo.setNumRows(0);
            }
            //preenchendo col. e linha.
            modelo.addRow(new Object[]{
                modelProdutos.getIdProduto(),
                modelProdutos.getProNome(),
                jTF_quantPro.getText(),
                modelProdutos.getProValor(),
                quantidade * modelProdutos.getProValor()
            });
            this.somarValorTotalProdutos();
            
        }
    }//GEN-LAST:event_jB_AdicionarActionPerformed

    private void jB_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_excluirActionPerformed
        int linha = jTab_consultaVendas.getSelectedRow();
        int codigoVenda = (int) jTab_consultaVendas.getValueAt(linha, 0);
        //buscando no banco todos os registros/produtos e adionando na lista
        listaModelProdutos = new ArrayList<>();
        listaModelProdutosVendasProdutos = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);
        //pecorrendo com o for
        for (int i = 0; i < listaModelProdutosVendasProdutos.size(); i++) {
            modelProdutos = new ModelProdutos();
            modelProdutos.setIdProduto(listaModelProdutosVendasProdutos.get(i).getModelProdutos().getIdProduto());
            
            //add no estoque e somando
            modelProdutos.setProEstoque(
                    listaModelProdutosVendasProdutos.get(i).getModelProdutos().getProEstoque()
                    + 
                    listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenProQuantidade());
            
            //aad na lista de listaModelProdutos atualizados
            listaModelProdutos.add(modelProdutos);
        }
        //chamando o metodo de alteração
        if(controllerProdutos.alterarEstoqueProdutoController(listaModelProdutos)){
        
            controllerVendasProdutos.excluirVendasProdutosController(codigoVenda);
            
            if(controllerVendas.excluirVendasController(codigoVenda)){
               JOptionPane.showMessageDialog(rootPane, "Venda excluído com sucesso!", "ATENÇÃO!", JOptionPane.WARNING_MESSAGE);
               this.carregarVendas();
            }else{
                JOptionPane.showMessageDialog(rootPane, "Erro ao excluir Venda!", "ERRO:", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "Erro ao alterar Estoque dos produtos!", "ERRO:", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jB_excluirActionPerformed

    private void jB_alterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_alterarActionPerformed
        jB_salvar.setEnabled(true);
        ALTERAR_SALVAR = "alterar";
        int linha = jTab_consultaVendas.getSelectedRow();
        int codigoVenda = (int) jTab_consultaVendas.getValueAt(linha, 0);
        //Recebendo todos os dados na lista
        listaModelProdutosVendasProdutos = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);
        
        //Adicinar na tabela
        DefaultTableModel modelo = (DefaultTableModel)jTab_prodVendas.getModel();
        //zerando a tabela
        modelo.setNumRows(0);
        // for percorrendo lista e inserido na tabela
        for (int i = 0; i < listaModelProdutosVendasProdutos.size(); i++) {
            //Setando o codigo da venda na tabela para alterar
            jTF_NumVenda.setText(String.valueOf(listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVendas()));
            //inserindo na tabela
            modelo.addRow(new Object[]{
                listaModelProdutosVendasProdutos.get(i).getModelProdutos().getIdProduto(),
                listaModelProdutosVendasProdutos.get(i).getModelProdutos().getProNome(),
                listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenProQuantidade(),
                listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenProValor(),
                
                //Multiplicação desse dois resultados dar o valorTotal
                listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenProQuantidade()
                *
                listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenProValor()
            });
        }
        //Somando o valor Total
        somarValorTotalProdutos();
        //Transferindo para a Tela de Abas de Cadastros de produtos vendas
        jTP_subMenus.setSelectedIndex(0);
    }//GEN-LAST:event_jB_alterarActionPerformed

    private void jB_pesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_pesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jB_pesquisaActionPerformed

    private void jB_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_cancelarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jB_cancelarActionPerformed

    private void jTF_codCliFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTF_codCliFocusLost
        modelCliente = controllerCliente.getClienteController(Integer.parseInt(jTF_codCli.getText()));
        uJCB_nomeCli.setSelectedItem(modelCliente.getCliNome());
    }//GEN-LAST:event_jTF_codCliFocusLost

    private void uJCB_nomeCliPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_uJCB_nomeCliPopupMenuWillBecomeInvisible
        //Ser a combox é visivel
        if(uJCB_nomeCli.isPopupVisible()){
           this.preencherCodigoClientePeloCombox();
        }
    }//GEN-LAST:event_uJCB_nomeCliPopupMenuWillBecomeInvisible

    private void uJCB_nomeProPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_uJCB_nomeProPopupMenuWillBecomeInvisible
        if(uJCB_nomePro.isVisible()){
           this.preencherCodigoProdutoPeloCombobox();
        }
    }//GEN-LAST:event_uJCB_nomeProPopupMenuWillBecomeInvisible

    private void jTF_codProdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTF_codProdFocusLost
        modelProdutos = controllerProdutos.retornarProdutoController(Integer.parseInt(jTF_codProd.getText()));
        uJCB_nomePro.setSelectedItem(modelProdutos.getProNome());
    }//GEN-LAST:event_jTF_codProdFocusLost

    private void jTF_descontoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTF_descontoFocusLost
        this.somarValorTotalProdutos();
    }//GEN-LAST:event_jTF_descontoFocusLost

    private void jB_removerProEstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_removerProEstActionPerformed
        //REMOVENDO PRODUTOS
        int linha = jTab_prodVendas.getSelectedRow();
        DefaultTableModel modelo = (DefaultTableModel)jTab_prodVendas.getModel();
        modelo.removeRow(linha);
        somarValorTotalProdutos();
    }//GEN-LAST:event_jB_removerProEstActionPerformed

    /**
     * preencher combox clientes
     */
    private void listarClientes(){
      listaModelCliente = controllerCliente.getListaClienteController();
      uJCB_nomeCli.removeAllItems();
        for (int i = 0; i < listaModelCliente.size(); i++) {
            uJCB_nomeCli.addItem(listaModelCliente.get(i).getCliNome());
        }
    }
    
    /**
     * preencher combox produtos
     */
    private void listarProdutos(){
        listaModelProdutos = controllerProdutos.retornarListaProdutosDAO();
        uJCB_nomePro.removeAllItems();
        for (int i = 0; i < listaModelProdutos.size(); i++) {
            uJCB_nomePro.addItem(listaModelProdutos.get(i).getProNome());
        }
    }
    private void carregarVendas(){
        listaModelVendasCliente = controllerVendasCliente.getListaVendasClienteController();
        //Usando o modelo padrão de tabela
        DefaultTableModel modelo = (DefaultTableModel)jTab_consultaVendas.getModel();
        //zerando linha 0 e setando os dados
        modelo.setNumRows(0);
        //inserir produtos na tabela
        int cont = listaModelVendasCliente.size();
        //contador de tamanho da lista
        for (int i = 0; i < cont; i++) {
            //preenchendo col. e linha.
            modelo.addRow(new Object[]{
                listaModelVendasCliente.get(i).getModelVendas().getIdVenda(),
                listaModelVendasCliente.get(i).getModelCliente().getCliNome(),
                listaModelVendasCliente.get(i).getModelVendas().getVenDataVenda()
            });
        }
    }
    /**
     * Aplica desconto ao valor final de venda 
     */
    private void aplicarDesconto(){
        // Tratando a exceçoes
        try {
            jFTF_valorTotal.setText(String.valueOf(Double.parseDouble(jFTF_valorTotal.getText()) - Double.parseDouble(jTF_desconto.getText())));
        } catch (NumberFormatException e) {
        }
        
    }
    /**
     * preenchendo codigo de Cliente
     */
    private void preencherCodigoClientePeloCombox(){
        modelCliente = controllerCliente.getClienteController(uJCB_nomeCli.getSelectedItem().toString());
        jTF_codCli.setText(String.valueOf(modelCliente.getIdCliente()));
    }
    /**
     * preenchendo codigo de Produto
     */
    private void preencherCodigoProdutoPeloCombobox(){
        modelProdutos = controllerProdutos.retornarProdutoController(uJCB_nomePro.getSelectedItem().toString());
        jTF_codProd.setText(String.valueOf(modelProdutos.getIdProduto()));
    }
    
    /**
     * Limpar cadastro de venda
     */
    private void limparFormulario(){
        jTF_quantPro.setText("");
        jTF_desconto.setText("");
        jFTF_valorTotal.setText("");
        DefaultTableModel modelo = (DefaultTableModel)jTab_prodVendas.getModel();
        modelo.setNumRows(0);
    }
    /**
     * Soma todos os produtos da venda
     */
    private void somarValorTotalProdutos(){
        double soma = 0, valor;
        int cont = jTab_prodVendas.getRowCount();
        for (int i = 0; i < cont; i++) {
            valor = (double)jTab_prodVendas.getValueAt(i, 4);
            soma = soma + valor;
        }
        jFTF_valorTotal.setText(String.valueOf(soma));
        this.aplicarDesconto();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewVendas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_Adicionar;
    private javax.swing.JButton jB_Novo;
    private javax.swing.JButton jB_alterar;
    private javax.swing.JButton jB_cancelar;
    private javax.swing.JButton jB_excluir;
    private javax.swing.JButton jB_pesquisa;
    private javax.swing.JButton jB_removerProEst;
    private javax.swing.JButton jB_salvar;
    private javax.swing.JFormattedTextField jFTF_valorTotal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPaneCadastro;
    private javax.swing.JPanel jPanelConsultar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTF_NumVenda;
    private javax.swing.JTextField jTF_codCli;
    private javax.swing.JTextField jTF_codProd;
    private javax.swing.JTextField jTF_desconto;
    private javax.swing.JTextField jTF_pesquisa;
    private javax.swing.JTextField jTF_quantPro;
    private javax.swing.JTabbedPane jTP_subMenus;
    private javax.swing.JTable jTab_consultaVendas;
    private javax.swing.JTable jTab_prodVendas;
    private componentes.UJComboBox uJCB_nomeCli;
    private componentes.UJComboBox uJCB_nomePro;
    // End of variables declaration//GEN-END:variables
}
